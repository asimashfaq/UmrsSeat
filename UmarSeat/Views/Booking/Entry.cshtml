@model UmarSeat.Models.SeatConfirmation

@{
    ViewBag.Title = "Create";
}
<style>
    select{
        border:0px !important;
    }
    .select2-container {
        width: 100%;
    }

    .bootstrap-datetimepicker-widget, .datepicker {
        z-index: 9999 !important;
    }
</style>
<link media="screen" type="text/css" rel="stylesheet" href="~/Content/assets/plugins/bootstrap-datepicker/css/datepicker3.css">

<link href="~/Content/overlay-bootstrap.css" rel="stylesheet" />
<br/>
<div class="panel panel-default col-sm-8">
    <div class="panel-heading">
        <div class="panel-title">
           <h3> Add Seat Confirmation</h3>
        </div>
        <div class="pull-right">

          
            <button type="button" class="btn btn-default"><i class="fa fa-file-excel-o"></i> Import Excel</button>
         
        </div>
    </div>
  
    <div class="panel-body" >
        
            <div id="dv1">
                <div id="aaa" class="panel-default-overlay-down">

                    <div class="col-sm-12 text-center" style="height:100%">

                        <div class="progress-circle-indeterminate m-t-45">

                        </div>
                        <br>
                        <p class="small hint-text">Loading data</p>
                    </div>
                </div>
            </div>
        
            @using (Html.BeginForm("entry", "booking", FormMethod.Post, htmlAttributes: new { id = "booking-entry-form", style = "visibility:hidden" }))
            {
                @Html.AntiForgeryToken()


                <div class="">
                    @Html.ValidationSummary(true)
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group  form-group-default form-group-default-select2">
                            <label>Country</label>

                            @{
                RouteValueDictionary RouteValues = new RouteValueDictionary();


                RouteValues["class"] = "full-width";
                RouteValues["data-init-plugin"] = "select2";
                RouteValues["id"] = "Country1";


                            }

                            @Html.DropDownListFor(x => x.country, Model.ListCountry, "", RouteValues)
                            

                        </div>

                    </div>
                  
                    <div class="col-sm-6">
                        <div class="form-group form-group-default">

                            @Html.LabelFor(model => model.pnrNumber)

                            @Html.TextBoxFor(model => model.pnrNumber, new { @class = "form-control", style = "text-transform:UPPERCASE" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group  form-group-default form-group-default-select2  input-group">
                            <label>Air Line</label>
                            
                            @Html.DropDownListFor(model => model.airLine, Model.ListAirline,"", new { @id = "airlineId", @class = "full-width" })
                            <span class="bg-complete-lighter input-group-addon ">
                                <a id="addAirline" href="/airline/create" data-toggle="modal" data-target="#modalSlideUp" class="btn btn-complete"><i class="fa fa-plus"></i></a>
                            </span>
                          

                        </div>

                    </div>

                </div>
                <div class="row">

                    <div class="col-sm-12">
                        <div class="form-group  form-group-default form-group-default-select2 input-group">
                            @Html.LabelFor(model => model.stockId)
                            @Html.DropDownListFor(x => x.stockId, Model.ListStockId, "", new { @id = "stockId", @class = "full-width" })
                            @Html.ValidationMessageFor(model => model.stockId)
                            <span class="bg-complete-lighter input-group-addon ">
                                <a id="addStockId" href="/stockid/create" data-toggle="modal" data-target="#modalSlideUp" class="btn btn-complete"><i class="fa fa-plus"></i></a>
                            </span>



                        </div>
                    </div>
                    
                </div>

                <div class="row">
                    <div class="col-sm-6">
                        @{
                Model.outBoundDate = DateTime.Now;
                        }
                        <div class="form-group form-group-default date input-group">
                            @Html.LabelFor(model => model.outBoundDate)

                            @Html.TextBoxFor(model => model.outBoundDate, new { @id = "outbounddate", @class = "form-control", @Value = Model.outBoundDate.ToString("dd/MM/yyyy"), })
                            @Html.ValidationMessageFor(model => model.outBoundDate)
                            <span class="input-group-addon"> <i class="fa fa-calendar"></i></span>
                        </div>

                    </div>
                    <div class="col-sm-6">

                        @{
                Model.inBoundDate = DateTime.Now;
                        }
                        <div class="form-group form-group-default date input-group">
                            @Html.LabelFor(model => model.inBoundDate)
                            @Html.TextBoxFor(model => model.inBoundDate, new { @id = "inbounddate", @class = "form-control", @Value = Model.outBoundDate.ToString("dd/MM/yyyy"), })
                            @Html.ValidationMessageFor(model => model.inBoundDate)
                            <span class="input-group-addon"> <i class="fa fa-calendar"></i></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group  form-group-default form-group-default-select2  input-group">
                            @Html.LabelFor(model => model.outBoundSector)
                            @Html.DropDownListFor(model => model.outBoundSector, Model.ListSectors,"", new { @id = "outboundsector", @class = "full-width" })
                            <span class="bg-complete-lighter input-group-addon ">
                                <a id="addobs" href="/sector/create" data-toggle="modal" data-target="#modalSlideUp" class="btn btn-complete"><i class="fa fa-plus"></i></a>
                            </span>

                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group  form-group-default form-group-default-select2  input-group">
                            @Html.LabelFor(model => model.inBoundSector)
                            @Html.DropDownListFor(model => model.inBoundSector, Model.ListSectors,"", new { @id = "inboundsector", @class = "full-width" })
                            <span class="bg-complete-lighter input-group-addon ">
                                <a id="addibs" href="/sector/create" data-toggle="modal" data-target="#modalSlideUp" class="btn btn-complete"><i class="fa fa-plus"></i></a>
                            </span>

                        </div>

                    </div>
                    
                </div>



                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group  form-group-default ">
                            @Html.LabelFor(model => model.noOfSeats)
                            @Html.TextBoxFor(model => model.noOfSeats, new { @class = "form-control", Value="" })
                            @Html.ValidationMessageFor(model => model.noOfSeats)
                        </div>

                    </div>
                    <div class="col-sm-6">
                        <div class="form-group form-group-default has-success">
                            @Html.LabelFor(model => model.cost)
                            @{
                RouteValues = new RouteValueDictionary();


                RouteValues["class"] = "form-control";

                RouteValues["id"] = "cost";
                RouteValues["value"] = "";
                RouteValues["data-inputmask"] = "'alias': 'numeric', 'groupSeparator': ',', 'autoGroup': true, 'digits': 0, 'digitsOptional': false, 'prefix': 'Rs ', 'placeholder': '0',  'clearMaskOnLostFocus': true";
                RouteValues["data-inputmask-repeat"] = "10";

                            }
                            @Html.TextBoxFor(model => model.cost, RouteValues)
                            @Html.ValidationMessageFor(model => model.cost)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group  form-group-default form-group-default-select2 input-group">
                            @Html.LabelFor(model => model.category)
                            @Html.DropDownListFor(model => model.category, Model.ListCategory,"", new { @id = "cat", @class = "full-width" })
                            @Html.ValidationMessageFor(model => model.category)
                            <span class="bg-complete-lighter input-group-addon ">
                                <a id="addc" href="/category/create" data-toggle="modal" data-target="#modalSlideUp" class="btn btn-complete"><i class="fa fa-plus"></i></a>
                            </span>
                        </div>

                    </div>
                    <div class="col-sm-6">
                        @{
                                string br = (string)Session["branchName"];
                                if(!string.IsNullOrEmpty(br))
                                {
                                    Model.recevingBranch = br;
                                     <div class="form-group  form-group-default">
                            @Html.LabelFor(model => model.recevingBranch)
                            @Html.TextBoxFor(model => model.recevingBranch, new { @class = "form-control" ,@disabled="disabled"})
                            @Html.ValidationMessageFor(model => model.recevingBranch)
                           
                        </div>
                                }
                                else
                                {
                                     <div class="form-group  form-group-default form-group-default-select2  input-group">
                            @Html.LabelFor(model => model.recevingBranch)
                            @Html.DropDownListFor(model => model.recevingBranch, Model.ListBranches,"", new { @id = "branches", @class = "full-width" })
                            @Html.ValidationMessageFor(model => model.recevingBranch)
                            <span class="bg-complete-lighter input-group-addon ">
                                <a id="addb" href="/branches/create" data-toggle="modal" data-target="#modalSlideUp" class="btn btn-complete"><i class="fa fa-plus"></i></a>
                            </span>
                        </div>
                                }
                        }
                       
                    </div>
                </div>



                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group form-group-default">
                            @Html.LabelFor(model => model.emdNumber)
                            @Html.TextBoxFor(model => model.emdNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.emdNumber)
                        </div>
                    </div>
                    <div class="col-sm-6">

                        @{
                Model.timeLimit = DateTime.Now;
                        }
                        <div class="form-group form-group-default date input-group">
                            @Html.LabelFor(model => model.timeLimit)
                            @Html.TextBoxFor(model => model.timeLimit, new { @id = "timelimit", @class = "form-control", @Value = Model.outBoundDate.ToString("dd/MM/yyyy"), })
                            @Html.ValidationMessageFor(model => model.timeLimit)
                            <span class="input-group-addon"> <i class="fa fa-calendar"></i></span>
                        </div>
                    </div>
                </div>




                <button type="button" class="btn btn-primary" onclick="bookingsavedata()"><i class="pg-plus"></i> Add Seat Confirmation</button>
                <button type="button" class="btn btn-default" onclick="clearall()"><i class="pg-close"></i> Clear</button>




            }

      
    </div>
    </div>

   <div data-refresh="true" class="modal fade slide-up disable-scroll" id="modalSlideUp" tabindex="-1" role="dialog" aria-labelledby="modalSlideUpLabel" aria-hidden="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content-wrapper">
            <div class="modal-content">
                <div class="modal-header clearfix text-left">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        <i class="pg-close fs-14"></i>
                    </button>
                    <h5>Please wait <span class="semi-bold">...</span></h5>
                </div>
                <div class="modal-body" id="mc">
                    Loading Content
                </div>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script src="https://rawgit.com/RobinHerbots/jquery.inputmask/3.x/dist/jquery.inputmask.bundle.js"></script>
        <script src="~/Content/assets/plugins/jquery-autonumeric/autoNumeric.js" type="text/javascript"></script>
        <script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.11.0/additional-methods.js"></script>
        <script src="~/Content/assets/plugins/bootstrap-select2/select2.min.js" type="text/javascript"></script>
        
        <script src="~/Scripts/moment.js"></script>
        <script type="text/javascript" src="~/Content/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>
        <script src="~/app/bookingscript.js"></script>
<script src="~/app/saveScript.js"></script>
        <style>
            .form-group-default.form-group-default-select2 .select2-container .select2-choice .select2-chosen{
                padding-top:5px;
            }
            #select2-chosen-2 {
                padding-top: 0px;
            }
        </style>
        <script>
            $(document).ready(function () {
                $("#dv1").html('');
                $("#booking-entry-form").css('visibility', 'visible')
                $('#addAirline').tooltip({ title: 'Add new Airline', container: 'body' });
                $('#addStockId').tooltip({ title: 'Add new Stock Id', container: 'body' });
                $('#addobs').tooltip({ title: 'Add new Outbound Sector', container: 'body' });
                $('#addibs').tooltip({ title: 'Add new Inbound Sector', container: 'body' });
                $('#addc').tooltip({ title: 'Add new Category', container: 'body' });
                $('#addb').tooltip({ title: 'Add new Branch', container: 'body' });
            });
        </script>
       
    }
