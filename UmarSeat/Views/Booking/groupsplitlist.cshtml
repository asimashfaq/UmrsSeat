@model IEnumerable<UmarSeat.Models.SeatConfirmation>

@{
    ViewBag.Title = "Index";
}
<link href="~/Content/overlay-bootstrap.css" rel="stylesheet" />
<div id="myPortlet" class="panel panel-transparent">


    <div class="panel-heading">
        <div class="panel-title">
            Advance Filter
        </div>
        <div class="panel-controls">
            <ul>

                <li>
                    <a href="#" class="portlet-collapse" data-toggle="collapse"><i class="portlet-icon portlet-icon-collapse"></i></a>
                </li>

                <li>
                    <a href="#" class="portlet-close" data-toggle="close"><i class="portlet-icon portlet-icon-close"></i></a>
                </li>
            </ul>
        </div>
    </div>
    <div class="panel-body form-group-attached">

        <div class="row">
            <div class="col-sm-4">
                <div class="form-group form-group-default">
                    @Html.LabelFor(model => model.First().pnrNumber)
                    @Html.TextBox("pnrNumber", "", new { @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group form-group-default">
                    @Html.LabelFor(model => model.First().newPnrNumber)
                    @Html.TextBox("newPnrNumber", "", new { @class = "form-control" })
                </div>
            </div>

            <div class="col-sm-4">
                <div class="form-group form-group-default">

                    @Html.LabelFor(model => model.First().outBoundSector)
                    @Html.TextBox("outBoundSector", "", new { @class = "form-control" })

                </div>
            </div>



        </div>

        <div class="row">
            <div class="col-sm-3">
                <div class="form-group form-group-default">
                    @Html.LabelFor(model => model.First().airLine)
                    @Html.TextBox("airline", "", new { @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group form-group-default">
                    @Html.LabelFor(model => model.First().stockId)
                    @Html.TextBox("stockId", "", new { @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group form-group-default">
                    @Html.LabelFor(model => model.First().recevingBranch)
                    @Html.TextBox("recevingBranch", "", new { @class = "form-control" })

                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group form-group-default">
                    @Html.LabelFor(model => model.First().category)
                    @Html.TextBox("category", "", new { @class = "form-control" })

                </div>
            </div>


        </div>
        <div class="row">
            <div class="col-sm-4">
                <div class="form-group form-group-default">
                    <label>Outbound Date Range</label>
                    <div id="reportrange" class="pull-right" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 0px solid #ccc; width: 100%">
                        <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>&nbsp;
                        <span></span> <b class="caret"></b>
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group form-group-default">
                    <label>Time Limit Range</label>
                    <div id="reportrange2" class="pull-right" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 0px solid #ccc; width: 100%">
                        <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>&nbsp;
                        <span></span> <b class="caret"></b>
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group form-group-default">
                    <label>Creation Date</label>
                    <div id="reportrange3" class="pull-right" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 0px solid #ccc; width: 100%">
                        <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>&nbsp;
                        <span></span> <b class="caret"></b>
                    </div>
                </div>
            </div>

        </div>
        <br />
        <div class="row">
            <button type="button" class="btn btn-primary" onclick="avsearch()"><i class="pg-search"></i> Search</button>
            <button type="reset" class="btn btn-default" onclick="avclear()"><i class="pg-close"></i> Clear</button>

        </div>

    </div>
</div>



<div class="panel panel-default">
    <div class="panel-heading">
        <div class="panel-title">
            Record
        </div>
        <div class="pull-right">
            <button type="button" class="btn btn-default"><i class="fa fa-file-excel-o"></i> Export to Excel</button>
            <button type="button" class="btn btn-default"><i class="fa fa-file-excel-o"></i> Export All to Excel</button>
        </div>
    </div>
    <div class="panel-body" id="dv1">

        @{Html.RenderPartial("_nsclist", Model);}


    </div>
</div>

<div class="quickview-wrapper builder hidden-sm hidden-xs" id="builder">
    <div class="p-l-30 p-t-40 p-r-30 ">
        <a class="builder-close quickview-toggle pg-close" data-toggle="quickview" data-toggle-element="#builder" href="#"></a>
        <a class="builder-toggle" data-toggle="quickview" data-toggle-element="#builder"><i class="pg pg-settings"></i></a>
        <div class="scrollable full-height">
            <div class="p-l-10 p-r-50">
                <h5 class="semi-bold">
                    Advance Settings
                </h5>
                <p class=" hint-text no-margin">
                    Customize table preview
                </p>
                <p class="small hint-text m-b-20">
                    Customize columns for export.
                </p>
                <div class="visible">
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="0" type="checkbox" checked="checked" value="1" id="cpnr">
                        <label for="cpnr">pnrNumber</label>
                    </div>
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="1" type="checkbox" checked="checked" value="1" id="cnpnr">
                        <label for="cnpnr">New PNR #</label>
                    </div>
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="2" type="checkbox" checked="checked" value="1" id="cstock">
                        <label for="cstock">Stock Id</label>
                    </div>
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="3" type="checkbox" checked="checked" value="1" id="coutbounddate">
                        <label for="coutbounddate">Outbound Date</label>
                    </div>
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="4" type="checkbox" checked="checked" value="1" id="cinbounddate">
                        <label for="cinbounddate">Inbound Date</label>
                    </div>
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="5" type="checkbox" value="1" id="coutboundsector">
                        <label for="coutboundsector">Outboud Sector</label>
                    </div>
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="6" type="checkbox" value="1" id="cinboundsector">
                        <label for="cinboundsector">Inboud Sector</label>
                    </div>


                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="7" type="checkbox" checked="checked" value="1" id="ccost">
                        <label for="ccost">Cost</label>
                    </div>
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="8" type="checkbox" checked="checked" value="1" id="cnoofseats">
                        <label for="cnoofseats"># Od Seats</label>
                    </div>
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="9" type="checkbox" checked="checked" value="1" id="ccategory">
                        <label for="ccategory">Category</label>
                    </div>
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="10" type="checkbox" value="1" id="creveingBranch">
                        <label for="creveingBranch">Receving Branch</label>
                    </div>
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="11" type="checkbox" value="1" id="cemdnumber">
                        <label for="cemdnumber">Emd #</label>
                    </div>
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="12" type="checkbox" value="1" id="ctimelimit">
                        <label for="ctimelimit">Time Limit</label>
                    </div>
                    <div class="checkbox check-primary checkbox-circle">
                        <input data-colum="13" type="checkbox" checked="checked" value="1" id="caction">
                        <label for="caction">Action</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- END PANEL -->
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <style>
        #reportrange span, #reportrange2 span, #reportrange3 span {
            display: inline-block;
            width: 90%;
        }
    </style>
    <script src="~/Content/assets/plugins/jquery-datatable/media/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="~/Content/assets/plugins/jquery-datatable/extensions/TableTools/js/dataTables.tableTools.min.js" type="text/javascript"></script>

    <script type="text/javascript" src="~/Content/assets/plugins/datatables-responsive/js/datatables.responsive.js"></script>
    <script type="text/javascript" src="~/Content/assets/plugins/datatables-responsive/js/lodash.min.js"></script>
<script src="~/Content/assets/asimdatabtable/js/ColVis.js"></script>
<script src="~/Scripts/excellentexport.js"></script>
    <script src="~/Scripts/moment.js"></script>

    <script>
        function avclear() {
            $("#pnrNumber").val("");
            $("#airline").val("");
            $("#outBoundSector").val("");
            $("#stockId").val("");
            $("#recevingBranch").val("");
            $("category").val("");
            $("#reportrange3 span").text("");
            $("#reportrange span").text("");
            $("#reportrange2 span").text("");
            $("#newPnrNumber").val();
        }

        function avsearch() {
            $("#dv1").append('<div id="aaa" class="panel-default-overlay-down">\
                        <div class="col-sm-12 text-center" style="height:100%">\
                            <div class="progress-circle-indeterminate m-t-45">\
                            </div>\
                            <br>\
                            <p class="small hint-text">Loading data</p>\
                        </div>\
                    </div>');
            var pdata = {};
            pdata["pnrnumber"] = $("#pnrNumber").val();
            pdata["airline"] = $("#airline").val();
            pdata["outBoundSector"] = $("#outBoundSector").val();
            pdata["stockId"] = $("#stockId").val();
            pdata["recevingBranch"] = $("#recevingBranch").val();
            pdata["category"] = $("#category").val();
            pdata["creationRange"] = $("#reportrange3 span").text();
            pdata["outBoundRange"] = $("#reportrange span").text();
            pdata["timeLimitRange"] = $("#reportrange2 span").text();
            pdata["newPnrNumber"] = $("#newPnrNumber").val();

            $.ajax({
                type: "post",
                url: "/booking/nadvanceSearch",
                data: JSON.stringify({ ssm: (pdata) }),
                datatype: "json",
                contentType: "application/json",
                success: function (data) {
                    avclear()
                    $("#dv1").html(data);

                    $("#detailedTable").dataTable().fnDestroy();
                    table = $('#detailedTable');
                    _handelDatatable();
                }
            });

        }
        var table = $('#detailedTable');
        var _handleNavigation = function (d) {
            console.log($(d).attr('href'));
            $("#dv1").load($(d).attr('href'), function (text, status, xhr) {
                $("#detailedTable").dataTable().fnDestroy();
                table = $('#detailedTable');
                _handelDatatable();

                $("#table_paginate a").click(function (e) {

                    e.preventDefault();

                    _handleNavigation($(this));
                });
            });
        };

        $("#table_paginate a").click(function (e) {

            e.preventDefault();

            _handleNavigation($(this));



        });

        var _format = function (d) {
            // `d` is the original data object for the row
            return '     <div id="dv" > <div class="col-sm-12 text-center">\
                        <div class="progress-circle-indeterminate m-t-45">\
                        </div>\
                        <br>\
                        <p class="small hint-text">Loading data</p>\
                      </div></div>';



        }
        var table1;

        var _handelDatatable = function () {

         table1=   table.DataTable({
                "sDom": "t",
                "scrollCollapse": true,
                "paging": false,
                "bSort": false,
                "bDestory": false,
                fnDrawCallback: function (oSettings) {

                    $('#exv').on('click', function (e) {

                        // Get the column API object
                        var column = table1.column(13);
                        column.visible(false);
                        var todaysDate = moment().format('DD-MM-YYYY');

                        $(this).attr('download', todaysDate + '.xls')
                        ExcellentExport.excel(this, 'detailedTable', 'Sheet 1');

                        column.visible(true);
                    });
                }
            });


            $(".visible  input:checkbox").each(function (index, thisCheck) {
                var column = table1.column($(thisCheck).attr('data-colum'));

                if ($(thisCheck).is(':checked')) {

                    column.visible(true);
                }
                else {
                    column.visible(false);
                }

            });
            $(".visible input[type=checkbox]").change(function () {
                console.log($(this).attr('data-colum'));
                column = table1.column($(this).attr('data-colum'));
                if ($(this).is(':checked')) {
                    column.visible(true);
                }
                else {
                    column.visible(false);
                }
            });

            // Add event listener for opening and closing details
            $('#detailedTable tbody').on('click', 'td', function () {
           
                if (!$(this).hasClass('action')) {
                    var row1 = $(this).parent()[0];
                    if ($(row1).hasClass('shown') && $(row1).next().hasClass('row-details')) {
                        $(row1).removeClass('shown');
                        $(row1).next().remove();
                        return;
                    }
                    var tr = $(row1).closest('tr');
                    var row = table.DataTable().row(tr);

                    $(row1).parents('tbody').find('.shown').removeClass('shown');
                    $(row1).parents('tbody').find('.row-details').remove();


                    row.child(_format($(row1).attr('id'))).show();
                    tr.addClass('shown');
                    tr.next().addClass('row-details');

                    $.ajax({
                        type: "GET",
                        url: "/booking/scjson",
                        data: { pnr: $(row1).attr('id') },
                        datatype: "json",
                        traditional: true,
                        success: function (data) {
                            var re = /-?\d+/;
                            var m = re.exec(data.outBoundDate);

                            data.outBoundDate = moment(parseInt(m[0])).format('L');

                            m = re.exec(data.inBoundDate);
                            data.inBoundDate = moment(parseInt(m[0])).format('L');

                            m = re.exec(data.timeLimit);
                            data.timeLimit = moment(parseInt(m[0])).format('L');


                            $("#dv").html('<table class="table table-inline ">' +
                        '<tr>' +
                        '<td>PNR #</td>' +
                          '<td>' + data.pnrNumber + '</td>' +
                        '<td>New PNR #</td>' +
                          '<td>' + data.newPnrNumber + '</td>' +
                        '</tr>' +
                        '<tr>' +
                             '<td>Airline</td>' +
                          '<td>' + data.airLine + '</td>' +
                        '<td>Stock ID</td>' +
                           '<td>' + data.stockId + '</td>' +
                        '</tr>' +
                        '<tr>' +
                        '<td>Outbound Date</td>' +
                         '<td>' + data.outBoundDate + '</td>' +
                         '<td>Inbound Date</td>' +
                            '<td>' + data.inBoundDate + '</td>' +
                        '</tr>' +
                         '<tr>' +
                        '<td>Outbound Sector</td>' +
                           '<td>' + data.outBoundSector + '</td>' +
                         '<td>Inbound Inbound</td>' +
                           '<td>' + data.inBoundSector + '</td>' +
                        '</tr>' +
                        '<tr>' +
                        '<td>Costs</td>' +
                          '<td>' + data.cost + '</td>' +
                         '<td>Number of Seats</td>' +
                          '<td>' + data.noOfSeats + '</td>' +
                        '</tr>' +
                        '<tr>' +
                        '<td>Group Category</td>' +
                           '<td>' + data.category + '</td>' +
                         '<td>Receving Branch</td>' +
                            '<td>' + data.recevingBranch + '</td>' +
                        '</tr>' +
                        '<tr>' +
                        '<td>EMD #</td>' +
                          '<td>' + data.emdNumber + '</td>' +
                         '<td>Time Limit</td>' +
                         '<td>' + data.timeLimit + '</td>' +
                        '</tr>' +
                        '</table>');
                        }

                    });
                }
            });
        };

        _handelDatatable();


    </script>

    <script src="~/Scripts/moment.js"></script>

    <script src="~/Content/assets/plugins/bootstrap-daterangepicker/daterangepicker.js"></script>
    <script type="text/javascript">

        $(function () {
            $('#myPortlet').portlet()
            function cb(start, end) {

                $('#reportrange span').html(start.format('L') + ' - ' + end.format('L'));

            }
            function cb2(start, end) {

                $('#reportrange2 span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            }
            function cb3(start, end) {

                $('#reportrange3 span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            }
            cb(moment().subtract(29, 'days'), moment());
            cb2(moment().subtract(29, 'days'), moment());
            cb3(moment().subtract(29, 'days'), moment());

            $('#reportrange').daterangepicker({
                "opens": "center",
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);
            $('#reportrange2').daterangepicker({
                "opens": "center",
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb2);
            $('#reportrange3').daterangepicker({
                "opens": "center",
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb3);
       //     $('#reportrange span,#reportrange2 span,#reportrange3 span').html("");
        });
    </script>
}
